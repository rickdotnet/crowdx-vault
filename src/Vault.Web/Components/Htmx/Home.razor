@page "/htmx/home"
@using NATS.Jwt.Models
@using NATS.NKeys

<CommandDisplay Prompt="vault init">
    <CommandOutput Label="seed:" Text="@keyPair.GetSeed()"/>
    <CommandOutput Label="public_key:" Text="@keyPair.GetPublicKey()"/>
    <CommandOutput Label="jwt_token:" Text="@jwt"/>
</CommandDisplay>

<CommandDisplay Prompt="vault create">
    <form hx-post="/kv"
          hx-ext="json-enc"
          hx-headers='{"Authorization": "Bearer @jwt"}'
          hx-target="#vault-result"
          hx-swap="innerHTML"
          hx-indicator="#loading"
          hx-trigger="submit"
          hx-disabled-elt="#submit-vault"
          hx-on:htmx:after-request="
            if(event.detail.xhr.status === 200) {
              const response = JSON.parse(event.detail.xhr.responseText);
              const vaultId = response.vaultId;
              htmx.ajax('GET', '/htmx/partials/vault-result?vaultId=' + encodeURIComponent(vaultId), '#vault-result');
              document.getElementById('vault-result').style.display = 'block';
              htmx.ajax('GET', '/htmx/partials/vault-put?vaultId=' + encodeURIComponent(vaultId) + '&seed=' + encodeURIComponent('@keyPair.GetSeed()'), '#vault-put');
              document.getElementById('submit-vault-group').style.display = 'none';
              setTimeout(() => { window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' }); }, 100);
            }">
        
        <CommandOutput Label="display_name:" Text="test-vault" />
        <CommandOutput Label="description:" Text="Development test vault" />
        <CommandSubmit Id="submit-vault" Text="[CREATE_VAULT]" />
    </form>

    <HtmxResult Id="vault-result" />
    
</CommandDisplay>

<HtmxResult Id="vault-put" />
<HtmxResult Id="vault-get" />

@code {
    private readonly KeyPair keyPair = KeyPair.CreatePair(PrefixByte.Account);
    private string jwt = string.Empty;

    protected override void OnInitialized()
    {
        var claims = new NatsGenericClaims
        {
            Subject = keyPair.GetPublicKey(),
            Expires = DateTimeOffset.UtcNow.AddMonths(6)
        };
        jwt = JwtUtil.Encode(claims, keyPair);
    }

}